name: Release

on:
  push:
    branches:
      - main
      - next

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-22.04
    
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install system dependencies for WASM
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxss1 \
            libasound2 \
            xvfb

      - name: Set up virtual display (Xvfb)
        uses: GabrielBB/xvfb-action@v1
        with:
          run: true

      # The 'Set up virtual display' step has been removed as the action above handles it.

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run wasm:prepare && bun run build

      - name: Debug WASM Environment
        run: |
          echo "Node version: $(node --version)"
          echo "Display: $DISPLAY" # This will now be set by the xvfb-action
          echo "Checking runtime files:"
          ls -la dist/runtime/_framework/ || echo "Framework directory not found"
          ls -la runtime/_framework/ || echo "Source runtime directory not found"
          echo "Environment variables:"
          env | grep -E "(DISPLAY|WASM|NODE)" || echo "No WASM-specific env vars"

      - name: Test built version
        run: bun test tests/convert-built.spec.ts
        env:
          # Node.js options for WASM
          NODE_OPTIONS: '--max-old-space-size=4096'
          # Environment for WASM threading
          WASM_THREADS: "1"
          # Additional debugging
          DEBUG: "wasm:*"
        continue-on-error: false

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bunx semantic-release
